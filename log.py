# -*- coding: utf-8 -*-
"""log.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1J-iRGCrivdF_wdmzmXbAOT6HHaaWN-Tx
"""

import pandas as pd
import streamlit as st
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler

st.title('Model Deployment: Titanic Survival Prediction')

st.sidebar.header('User Input Parameters')

def user_input_features():
    Pclass = st.sidebar.selectbox('Passenger Class', (1, 2, 3))
    Sex = st.sidebar.selectbox('Gender', ('Male', 'Female'))
    Age = st.sidebar.number_input('Insert Age', min_value=1, max_value=100, value=25)
    SibSp = st.sidebar.number_input('Number of Siblings/Spouses Aboard', min_value=0, max_value=10, value=0)
    Parch = st.sidebar.number_input('Number of Parents/Children Aboard', min_value=0, max_value=10, value=0)
    Fare = st.sidebar.number_input('Fare Paid', min_value=0.0, max_value=500.0, value=50.0)

    Sex = 1 if Sex == 'Male' else 0

    data = {'Pclass': Pclass,
            'Sex': Sex,
            'Age': Age,
            'SibSp': SibSp,
            'Parch': Parch,
            'Fare': Fare}

    features = pd.DataFrame(data, index=[0])
    return features

df = user_input_features()
st.subheader('User Input Parameters')
st.write(df)

# Load Titanic dataset
titanic_train = pd.read_csv('Titanic_train.csv')
titanic_test = pd.read_csv('Titanic_test.csv')

# Preprocess data
titanic_train = titanic_train[['Survived', 'Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare']].dropna()
titanic_train['Sex'] = titanic_train['Sex'].map({'male': 1, 'female': 0})

X = titanic_train[['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare']]
Y = titanic_train['Survived']

# Standardize features
scaler = StandardScaler()
X = scaler.fit_transform(X)
df = scaler.transform(df)

# Train model
clf = LogisticRegression()
clf.fit(X, Y)

# Prediction
prediction = clf.predict(df)
prediction_proba = clf.predict_proba(df)

st.subheader('Predicted Result')
st.write('Survived' if prediction[0] == 1 else 'Did Not Survive')

st.subheader('Prediction Probability')
st.write(prediction_proba)